#+TITLE: Install
#+DESCRIPTION: Basic Arch installation with BTRFS

1. Get internet connection
   #+begin_src shell
    iwctl --passphrase "*****" station {interface_name} connect {SSID}
    # check using 'ping archlinux.org' or 'pacman -Sy'
   #+end_src
2. Disk formatting
   + use gdisk and create a new gpt partition table
   + hint: the hex code for an EFI partition is: ef00
   + no need for a swap partition
     #+begin_src shell
        mkfs.vfat -F 32 /dev/{efi-partition}
        mkfs.btrfs /dev/{root-partition}
     #+end_src
3. BTRFS
   + create 3 subvolumes to offer granular snapshotting capabilities; e.g. backup only root(@)
    #+begin_src shell
        mount /dev/{root-partition} /mnt
        btrfs subvolume create /mnt/@
        btrfs subvolume create /mnt/@home
        btrfs subvolume create /mnt/@var
        umount /mnt
    #+end_src
   + mount subvolumes
    #+begin_src shell
        mount -o noatime,compress=zstd,ssd,discard=async,space_cache=v2,subvol=@ /dev/{root-partition} /mnt
        mkdir -p /mnt/{boot/efi,home,var}
        mount -o noatime,compress=zstd,ssd,discard=async,space_cache=v2,subvol=@home /dev/{root-partition} /mnt/home
        mount -o noatime,compress=zstd,ssd,discard=async,space_cache=v2,subvol=@var /dev/{root-partition} /mnt/var
        mount /dev/{efi-partition} /mnt/boot/efi
    #+end_src
4. Package installation
   + install basic packages
    #+begin_src
        reflector
        pacstrap /mnt base linux linux-firmware btrfs-progs base-devel git vim
    #+end_src
5. fstab
   #+begin_src shell
    genfstab -U /mnt >> /mnt/etc/fstab
    arch-chroot /mnt
   #+end_src
6. Time & Clock
   #+begin_src shell
    timedatectl set-timezone Europe/London
    ln -sf /usr/share/zoneinfo/Europe/London /etc/localtime
    hwclock --systohc
    # edit /etc/locale.gen
    locale-gen
    echo "string uncommented in locale.gen" >> /etc/locale.conf

   #+end_src
7. Host
   #+begin_src shell
    echo {hostname} >> /etc/hostname
    # edit /etc/hosts and add the following lines
    127.0.0.1   localhost
    ::1         localhost
    127.0.1.1   {hostname}.localdomain  {hostname}
    # give new password to root user
    passwd
   #+end_src
8. Post Install
   #+begin_src
    pacman -Sy linux-headers grub efibootmgr networkmanager wpa_supplicant mtools dosfstools xdg-utils xorg xorg-xinit
   #+end_src
9. Grub installation
   #+begin_src shell
    grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=GRUB
    grub-mkconfig -o /boot/grub/grub.cfg
   #+end_src
10. Enable daemons
    #+begin_src shell
     systemctl enable NetworkManager
     systemctl enable fstrim.timer # imporves performance of ssd
    #+end_src
11. Create new user
    #+begin_src shell
    useradd -m {username}
    passwd {username}
    usermod -aG wheel {username}
    # uncomment the following line from sudoers using visudo
    # %wheel ALL=(ALL) ALL
    EDITOR=vim visudo
    #+end_src
12. Enable BTRFS
    + edit /etc/mkinitcpio.conf
    + add btrfs inside the empty MODULES list
    + regenerate mkinicpio
      #+begin_src shell
        mkinitcpio -p linux
      #+end_src
13. Reboot
    #+begin_src shell
    exit
    umount -R /mnt
    reboot
    #+end_src
14. AUR Helper
    + paru in this case
      #+begin_src shell
        git clone https://aur.archlinux.org/paru.git
        cd paru
        makepkg -si
        cd .. && rm -rf paru
      #+end_src
15. Timeshift & zramd
    #+begin_src shell
    pacman -S grub-btrfs stow
    paru -S timeshift
    sudo systemctl enable --now zramd
    # create it using the gui (sudo timeshift-gtk) and add /etc/timeshift/timeshift.json in dotfiles repo
    #+end_src
16. Things to take care of
    + replace /etc/pacman.conf with the one in the dotfiles dir
    #+begin_src shell
    mkdir -p ~/{dev,repos,Downloads}
    git clone https://github.com/George-Stav/dotfiles.git ~/repos/dotfiles
    cd ~/repos/dotfiles && git checkout qtile-old-linbox
    stow -t "$HOME" alacritty dunst easystroke env fish git gtk-3.0 lf nvim picom qtile rofi starship sxiv vim vpn wallpapers x11

    sudo pacman -Sy openssh python-pip qtile exa neovim emacs alacritty fish dunst lf rofi qbittorrent flameshot xorg xorg-xinit pulseaudio pavucontrol ttf-liberation ueberzug ripgrep btop tree dmenu ntfs-3g ffmpegthumbnailer mpv sxiv poppler nvtop gparted unzip trash-cli unzip qemu virt-manager virt-viewer dnsmasq vde2 bridge-utils openbsd-netcat libguestfs edk2-ovmf fontforge galculator mysql vim vi fzf firefox keychain lua mcfly nitrogen picom steam nvidia

    paru -S easystroke spotify xkblayout-state google-chrome sweet-cursor-theme-git candy-icons-git xampp
    #+end_src

    + allow user to shutdown and reboot with sudo
    #+begin_src shell
    sudo visudo
    # add following line
    {username} {hostname} =NOPASSWD: /usr/bin/systemctl poweroff,/usr/bin/systemctl halt,/usr/bin/systemctl reboot,/usr/bin/systemctl shutdown
    #+end_src
    + firefox theme: https://color.firefox.com/?theme=XQAAAAI7AgAAAAAAAABBqYhm849SCicxcUBMsXcGHf3p79EhVPY1ah1ibTLiQvLY1QylemTgx7j5vKuLuZKuYCmfRNmJrDwxZl3TENCvaY8NrQnmidl2aznduxxuL8kU3LIeH_jqjr-7aZ5GpRhz-JnOqVry8bFUsvOHU7eVimm2d7nfta5Ru6PdoK4by12-mlAd6r7KEQQ4FPX_mVlMEL6wGVcfJlXccMMCOxdfV6lynI083IbSAG32NfBn5JljqHByH880rbaP8tsr9NK-mJvSxEtRPuB43txnOsQvgeegC7TK4Tb13_5pIV0CE5KLdJHVf9NMMdzafXc495IwMG8w5GUNEdrkXRF20XDps9K_jMsi8564hmplsJii1rg4Djey7Zb7cBpKfbPY_9bJrgA
    + copy from Maxtor:
      - fonts
      - qbittorrent
    + git: [[https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent][create new ssh key]] + clone notes,scripts
      #+begin_src shell
        ssh-keygen -t ed25519 -C "georgestavropoulos0@gmail.com"
        kchain
        git clone git@github.com:George-Stav/notes.git ~/repos/notes
        git clone git@github.com:George-Stav/scripts.git ~/repos/scripts
        mkdir -p ~/.local/{share,bin,lib,include} && ~/repos/scripts/apply-scripts
      #+end_src
    + spare-car-parts + scrapy + virtualenvs
      - pip install venv
      - install required python packages
      - run reset_db AFTER creating the SpareCarParts DB in localhost/myphpadmin
    + emacs
    #+begin_src shell
    git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.emacs.d
    doom install # if this doesn't work, then change the doom abbreviation in .config/fish/fish_variables
    cd ~/repos/dotfiles && stow -t "$HOME" doom-emacs
    systemctl --user enable emacs
    #+end_src
